function pc = specular_path_component( tx_d, tx_h, rx_d, rx_h, ...
                                       n1, n2, wall_pos, k, perp, approx )
    rx = [ rx_d rx_h ]
    tx = [ tx_d tx_h ]
    wall = [ wall_pos 0 ]
    r1 = norm( wall - tx )
    r2 = norm( rx - wall )
    fc = fresnel_coefficients( tx_d, tx_h, wall_pos, n1, n2, perp )
    hankel_arg = k * ( r1 + r2 )
    second_hankel_arg = k*r1

    fresnel = abs( fc ) * abs( fc )
    E_i = greens_function( hankel_arg )
    F_i = greens_function( second_hankel_arg )
  
    phase_evolution_component = exp( -i * k * r2 )
    free_space_attenuation = sqrt( r1/( r1 + r2 ))
    pc = E_i %/F_i
    %pc = fresnel * E_i 
end
function gf = greens_function( kr )
    gf = (i/4) * hankel_2( kr )
end
function fc = fresnel_coefficients( tx_d, tx_h, wall_pos, ... 
                                     n1, n2, perp )
    angle_i = angle_of_incidence( tx_d, tx_h, wall_pos );
    angle_t = angle_of_transmission( tx_d, tx_h, wall_pos, n1, n2 )
    if perp
        fc = -( sin( angle_i - angle_t ))/( sin( angle_i + angle_t ));
    else
        fc = ( tan( angle_i - angle_t ))/( tan( angle_i + angle_t ));
    end
end
function at = angle_of_transmission( tx_d, tx_h, wall_pos, n1, n2 )
    angle_i = angle_of_incidence( tx_d, tx_h, wall_pos )
    at = asin( ( n1*sin( angle_i ))/n2 );
end
function ai = angle_of_incidence( tx_d, tx_h, wall_pos )
   ai = pi/2 - atan( tx_h / ( wall_pos - tx_d )) 
end
